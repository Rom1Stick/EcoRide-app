FROM node:18-alpine AS build

# Installer les dépendances nécessaires
WORKDIR /app
COPY frontend/package*.json ./
RUN npm ci

# Copier les fichiers sources
COPY frontend/assets ./assets
COPY frontend/pages ./pages

# Construire le frontend avec le script Linux
RUN npm run build:heroku

# Étape finale avec Nginx
FROM nginx:alpine

# Copier les fichiers générés dans le répertoire de service Nginx
COPY --from=build /app/dist /usr/share/nginx/html

# Script pour configurer et démarrer Nginx
RUN echo '#!/bin/sh' > /docker-entrypoint.sh && \
    echo 'set -e' >> /docker-entrypoint.sh && \
    echo 'echo "server { \
    listen \$PORT; \
    server_name _; \
    root /usr/share/nginx/html; \
    index index.html; \
    \
    # Redirection explicite de la racine vers index.html \
    location = / { \
        try_files /index.html =404; \
    } \
    \
    location / { \
        try_files \$uri \$uri/ /index.html; \
    } \
}" > /etc/nginx/conf.d/default.conf' >> /docker-entrypoint.sh && \
    echo 'exec nginx -g "daemon off;"' >> /docker-entrypoint.sh && \
    chmod +x /docker-entrypoint.sh

# Commande pour démarrer l'application
CMD ["/docker-entrypoint.sh"] 