FROM nginx:alpine

# Créer les répertoires nécessaires
RUN mkdir -p /usr/share/nginx/html
RUN mkdir -p /etc/nginx/templates

# Copier les fichiers statiques
COPY frontend/pages/ /usr/share/nginx/html/pages/
COPY frontend/assets/ /usr/share/nginx/html/assets/

# Configurer Nginx avec une gestion correcte des routes sans redirection vers la page d'accueil
RUN echo 'server { \
    listen ${PORT}; \
    server_name _; \
    root /usr/share/nginx/html; \
    index pages/public/index.html; \
\
    # Redirection de la racine vers index.html \
    location = / { \
        return 301 /pages/public/index.html; \
    } \
\
    # Servir les fichiers statiques \
    location /assets/ { \
        access_log off; \
        expires 30d; \
    } \
\
    # Gestion des pages HTML - IMPORTANT: pas de fallback vers index.html \
    location /pages/ { \
        try_files $uri $uri.html $uri/ =404; \
    } \
\
    # Gestion des erreurs \
    error_page 404 /pages/public/error.html; \
}' > /etc/nginx/templates/default.conf.template

# Script d'entrée pour la configuration dynamique
RUN echo '#!/bin/sh' > /docker-entrypoint.sh && \
    echo 'set -e' >> /docker-entrypoint.sh && \
    echo 'export PORT="${PORT:-8080}"' >> /docker-entrypoint.sh && \
    echo 'echo "Utilisation du port: $PORT"' >> /docker-entrypoint.sh && \
    echo 'envsubst < /etc/nginx/templates/default.conf.template > /etc/nginx/conf.d/default.conf' >> /docker-entrypoint.sh && \
    echo 'echo "Configuration Nginx :"' >> /docker-entrypoint.sh && \
    echo 'cat /etc/nginx/conf.d/default.conf' >> /docker-entrypoint.sh && \
    echo 'echo "Contenu du répertoire :"' >> /docker-entrypoint.sh && \
    echo 'ls -la /usr/share/nginx/html/' >> /docker-entrypoint.sh && \
    echo 'exec nginx -g "daemon off;"' >> /docker-entrypoint.sh && \
    chmod +x /docker-entrypoint.sh

# Exécuter le script d'entrée au démarrage
CMD ["/docker-entrypoint.sh"] 